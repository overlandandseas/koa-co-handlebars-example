'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _koaRouter = require('koa-router');

var _koaRouter2 = _interopRequireDefault(_koaRouter);

var _get = require('../../utils/get');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { return step("next", value); }, function (err) { return step("throw", err); }); } } return step("next"); }); }; }

const router = new _koaRouter2.default();
const singular = type => type.substring(0, type.length - 1);

router.get('/:type', (() => {
  var ref = _asyncToGenerator(function* (ctx, next) {
    const type = ctx.params.type;

    ctx.body = {
      data: yield (0, _get.all)(singular(type))
    };

    yield next;
  });

  return function (_x, _x2) {
    return ref.apply(this, arguments);
  };
})());

router.get('/(.*)/:id', (() => {
  var ref = _asyncToGenerator(function* (ctx, next) {
    const type = ctx.req.url.split('/')[2];

    ctx.body = {
      data: yield (0, _get.one)(singular(type), undefined.params.id)
    };

    yield next();
  });

  return function (_x3, _x4) {
    return ref.apply(this, arguments);
  };
})());

exports.default = router;
module.exports = exports['default'];